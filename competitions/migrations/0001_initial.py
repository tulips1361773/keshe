# Generated by Django 4.2.24 on 2025-09-12 06:52

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("campus", "0003_auto_20250911_1813"),
    ]

    operations = [
        migrations.CreateModel(
            name="Competition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="比赛标题")),
                ("description", models.TextField(blank=True, verbose_name="比赛描述")),
                ("competition_date", models.DateTimeField(verbose_name="比赛时间")),
                ("registration_start", models.DateTimeField(verbose_name="报名开始时间")),
                ("registration_end", models.DateTimeField(verbose_name="报名截止时间")),
                (
                    "registration_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=30.0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="报名费用",
                    ),
                ),
                (
                    "max_participants_per_group",
                    models.IntegerField(
                        default=20,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="每组最大参赛人数",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("upcoming", "即将开始"),
                            ("registration", "报名中"),
                            ("in_progress", "进行中"),
                            ("completed", "已完成"),
                            ("cancelled", "已取消"),
                        ],
                        default="upcoming",
                        max_length=20,
                        verbose_name="比赛状态",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "campus",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="campus.campus",
                        verbose_name="举办校区",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_competitions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
            ],
            options={
                "verbose_name": "比赛",
                "verbose_name_plural": "比赛",
                "ordering": ["-competition_date"],
            },
        ),
        migrations.CreateModel(
            name="CompetitionGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("group_name", models.CharField(max_length=50, verbose_name="分组名称")),
                (
                    "group_type",
                    models.CharField(
                        choices=[("A", "甲组"), ("B", "乙组"), ("C", "丙组")],
                        max_length=1,
                        verbose_name="组别类型",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "competition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="groups",
                        to="competitions.competition",
                        verbose_name="比赛",
                    ),
                ),
            ],
            options={
                "verbose_name": "比赛分组",
                "verbose_name_plural": "比赛分组",
            },
        ),
        migrations.CreateModel(
            name="CompetitionMatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "match_type",
                    models.CharField(
                        choices=[
                            ("group_stage", "小组赛"),
                            ("knockout", "淘汰赛"),
                            ("final", "决赛"),
                        ],
                        default="group_stage",
                        max_length=20,
                        verbose_name="比赛类型",
                    ),
                ),
                ("round_number", models.IntegerField(default=1, verbose_name="轮次")),
                (
                    "table_number",
                    models.IntegerField(blank=True, null=True, verbose_name="球台号"),
                ),
                (
                    "scheduled_time",
                    models.DateTimeField(blank=True, null=True, verbose_name="预定时间"),
                ),
                (
                    "actual_start_time",
                    models.DateTimeField(blank=True, null=True, verbose_name="实际开始时间"),
                ),
                (
                    "actual_end_time",
                    models.DateTimeField(blank=True, null=True, verbose_name="实际结束时间"),
                ),
                ("player1_score", models.IntegerField(default=0, verbose_name="选手1得分")),
                ("player2_score", models.IntegerField(default=0, verbose_name="选手2得分")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "已安排"),
                            ("in_progress", "进行中"),
                            ("completed", "已完成"),
                            ("cancelled", "已取消"),
                        ],
                        default="scheduled",
                        max_length=20,
                        verbose_name="比赛状态",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="备注")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "competition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matches",
                        to="competitions.competition",
                        verbose_name="比赛",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="competitions.competitiongroup",
                        verbose_name="分组",
                    ),
                ),
                (
                    "player1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matches_as_player1",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="选手1",
                    ),
                ),
                (
                    "player2",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matches_as_player2",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="选手2",
                    ),
                ),
                (
                    "winner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="won_matches",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="获胜者",
                    ),
                ),
            ],
            options={
                "verbose_name": "比赛对战",
                "verbose_name_plural": "比赛对战",
                "ordering": ["scheduled_time", "round_number"],
            },
        ),
        migrations.CreateModel(
            name="CompetitionGroupMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "seed_number",
                    models.IntegerField(blank=True, null=True, verbose_name="种子号"),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="competitions.competitiongroup",
                        verbose_name="分组",
                    ),
                ),
                (
                    "participant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="参赛者",
                    ),
                ),
            ],
            options={
                "verbose_name": "分组成员",
                "verbose_name_plural": "分组成员",
                "unique_together": {("group", "participant")},
            },
        ),
        migrations.AddField(
            model_name="competitiongroup",
            name="participants",
            field=models.ManyToManyField(
                through="competitions.CompetitionGroupMember",
                to=settings.AUTH_USER_MODEL,
                verbose_name="参赛者",
            ),
        ),
        migrations.CreateModel(
            name="CompetitionResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "group",
                    models.CharField(
                        choices=[("A", "甲组"), ("B", "乙组"), ("C", "丙组")],
                        max_length=1,
                        verbose_name="参赛组别",
                    ),
                ),
                ("matches_played", models.IntegerField(default=0, verbose_name="比赛场次")),
                ("matches_won", models.IntegerField(default=0, verbose_name="获胜场次")),
                ("matches_lost", models.IntegerField(default=0, verbose_name="失败场次")),
                ("total_score_for", models.IntegerField(default=0, verbose_name="总得分")),
                (
                    "total_score_against",
                    models.IntegerField(default=0, verbose_name="总失分"),
                ),
                (
                    "group_rank",
                    models.IntegerField(blank=True, null=True, verbose_name="组内排名"),
                ),
                (
                    "overall_rank",
                    models.IntegerField(blank=True, null=True, verbose_name="总排名"),
                ),
                (
                    "award",
                    models.CharField(blank=True, max_length=100, verbose_name="获得奖项"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "competition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="results",
                        to="competitions.competition",
                        verbose_name="比赛",
                    ),
                ),
                (
                    "participant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="competition_results",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="参赛者",
                    ),
                ),
            ],
            options={
                "verbose_name": "比赛结果",
                "verbose_name_plural": "比赛结果",
                "ordering": ["group", "group_rank"],
                "unique_together": {("competition", "participant")},
            },
        ),
        migrations.CreateModel(
            name="CompetitionRegistration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "group",
                    models.CharField(
                        choices=[("A", "甲组"), ("B", "乙组"), ("C", "丙组")],
                        max_length=1,
                        verbose_name="参赛组别",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "待确认"),
                            ("confirmed", "已确认"),
                            ("cancelled", "已取消"),
                            ("rejected", "已拒绝"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="报名状态",
                    ),
                ),
                (
                    "registration_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="报名时间"),
                ),
                (
                    "payment_status",
                    models.BooleanField(default=False, verbose_name="缴费状态"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="备注")),
                (
                    "competition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registrations",
                        to="competitions.competition",
                        verbose_name="比赛",
                    ),
                ),
                (
                    "participant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="competition_registrations",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="参赛者",
                    ),
                ),
            ],
            options={
                "verbose_name": "比赛报名",
                "verbose_name_plural": "比赛报名",
                "ordering": ["-registration_time"],
                "unique_together": {("competition", "participant")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="competitiongroup",
            unique_together={("competition", "group_name")},
        ),
    ]
